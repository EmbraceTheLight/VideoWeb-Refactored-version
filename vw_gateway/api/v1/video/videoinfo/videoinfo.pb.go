// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: v1/video/videoinfo/videoinfo.proto

package videoinfo

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CommonResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string                            `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Filename string                            `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Headers  map[string]*FileResp_HeaderValues `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FileResp) Reset() {
	*x = FileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResp) ProtoMessage() {}

func (x *FileResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResp.ProtoReflect.Descriptor instead.
func (*FileResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{1}
}

func (x *FileResp) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileResp) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileResp) GetHeaders() map[string]*FileResp_HeaderValues {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ProvideMpdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *ProvideMpdReq) Reset() {
	*x = ProvideMpdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideMpdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideMpdReq) ProtoMessage() {}

func (x *ProvideMpdReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideMpdReq.ProtoReflect.Descriptor instead.
func (*ProvideMpdReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{2}
}

func (x *ProvideMpdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProvideMpdReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type ProvideSegmentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// segment_path is the path of the segment file(.m4s)
	// It is parsed by the front-end, using the mpd file
	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId     int64  `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	SegmentPath string `protobuf:"bytes,3,opt,name=segment_path,json=segmentPath,proto3" json:"segment_path,omitempty"`
}

func (x *ProvideSegmentsReq) Reset() {
	*x = ProvideSegmentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideSegmentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideSegmentsReq) ProtoMessage() {}

func (x *ProvideSegmentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideSegmentsReq.ProtoReflect.Descriptor instead.
func (*ProvideSegmentsReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{3}
}

func (x *ProvideSegmentsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ProvideSegmentsReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *ProvideSegmentsReq) GetSegmentPath() string {
	if x != nil {
		return x.SegmentPath
	}
	return ""
}

type GetVideoCoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetVideoCoverReq) Reset() {
	*x = GetVideoCoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoCoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoCoverReq) ProtoMessage() {}

func (x *GetVideoCoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoCoverReq.ProtoReflect.Descriptor instead.
func (*GetVideoCoverReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{4}
}

func (x *GetVideoCoverReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetVideoCoverReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type DownloadVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *DownloadVideoReq) Reset() {
	*x = DownloadVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadVideoReq) ProtoMessage() {}

func (x *DownloadVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadVideoReq.ProtoReflect.Descriptor instead.
func (*DownloadVideoReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadVideoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DownloadVideoReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type VideoMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	PublisherId   int64                  `protobuf:"varint,2,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	PublisherName string                 `protobuf:"bytes,3,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	VideoPath     string                 `protobuf:"bytes,6,opt,name=video_path,json=videoPath,proto3" json:"video_path,omitempty"`
	Classes       []string               `protobuf:"bytes,7,rep,name=classes,proto3" json:"classes,omitempty"`
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Hot           int64                  `protobuf:"varint,9,opt,name=hot,proto3" json:"hot,omitempty"`
	CreatedTime   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	Records       *VideoMetaInfo_Records `protobuf:"bytes,11,opt,name=records,proto3" json:"records,omitempty"`
	Duration      string                 `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty"`
	CoverPath     string                 `protobuf:"bytes,13,opt,name=cover_path,json=coverPath,proto3" json:"cover_path,omitempty"`
}

func (x *VideoMetaInfo) Reset() {
	*x = VideoMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetaInfo) ProtoMessage() {}

func (x *VideoMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetaInfo.ProtoReflect.Descriptor instead.
func (*VideoMetaInfo) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{6}
}

func (x *VideoMetaInfo) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *VideoMetaInfo) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

func (x *VideoMetaInfo) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *VideoMetaInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoMetaInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoMetaInfo) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoMetaInfo) GetClasses() []string {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *VideoMetaInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VideoMetaInfo) GetHot() int64 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *VideoMetaInfo) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *VideoMetaInfo) GetRecords() *VideoMetaInfo_Records {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *VideoMetaInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *VideoMetaInfo) GetCoverPath() string {
	if x != nil {
		return x.CoverPath
	}
	return ""
}

type VideoSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	CntBarrages   int64  `protobuf:"varint,2,opt,name=cnt_barrages,json=cntBarrages,proto3" json:"cnt_barrages,omitempty"`
	CntViewed     int64  `protobuf:"varint,3,opt,name=cnt_viewed,json=cntViewed,proto3" json:"cnt_viewed,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Duration      string `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	PublisherName string `protobuf:"bytes,6,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	CoverPath     string `protobuf:"bytes,7,opt,name=cover_path,json=coverPath,proto3" json:"cover_path,omitempty"`
}

func (x *VideoSummary) Reset() {
	*x = VideoSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSummary) ProtoMessage() {}

func (x *VideoSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSummary.ProtoReflect.Descriptor instead.
func (*VideoSummary) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{7}
}

func (x *VideoSummary) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *VideoSummary) GetCntBarrages() int64 {
	if x != nil {
		return x.CntBarrages
	}
	return 0
}

func (x *VideoSummary) GetCntViewed() int64 {
	if x != nil {
		return x.CntViewed
	}
	return 0
}

func (x *VideoSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoSummary) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *VideoSummary) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *VideoSummary) GetCoverPath() string {
	if x != nil {
		return x.CoverPath
	}
	return ""
}

type GetVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetVideoInfoReq) Reset() {
	*x = GetVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoReq) ProtoMessage() {}

func (x *GetVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoReq.ProtoReflect.Descriptor instead.
func (*GetVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{8}
}

func (x *GetVideoInfoReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetVideoInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoDetail *VideoMetaInfo `protobuf:"bytes,1,opt,name=video_detail,json=videoDetail,proto3" json:"video_detail,omitempty"`
}

func (x *GetVideoInfoResp) Reset() {
	*x = GetVideoInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResp) ProtoMessage() {}

func (x *GetVideoInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResp.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{9}
}

func (x *GetVideoInfoResp) GetVideoDetail() *VideoMetaInfo {
	if x != nil {
		return x.VideoDetail
	}
	return nil
}

type GetVideoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class    []string `protobuf:"bytes,1,rep,name=class,proto3" json:"class,omitempty"` // 视频所属类别
	PageNum  int32    `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetVideoListReq) Reset() {
	*x = GetVideoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListReq) ProtoMessage() {}

func (x *GetVideoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListReq.ProtoReflect.Descriptor instead.
func (*GetVideoListReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoListReq) GetClass() []string {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *GetVideoListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetVideoListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetVideoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoSummary []*VideoSummary `protobuf:"bytes,1,rep,name=VideoSummary,proto3" json:"VideoSummary,omitempty"`
}

func (x *GetVideoListResp) Reset() {
	*x = GetVideoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListResp) ProtoMessage() {}

func (x *GetVideoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListResp.ProtoReflect.Descriptor instead.
func (*GetVideoListResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{11}
}

func (x *GetVideoListResp) GetVideoSummary() []*VideoSummary {
	if x != nil {
		return x.VideoSummary
	}
	return nil
}

type UploadVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64          `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoInfo *VideoMetaInfo `protobuf:"bytes,2,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
}

func (x *UploadVideoInfoReq) Reset() {
	*x = UploadVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoInfoReq) ProtoMessage() {}

func (x *UploadVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoInfoReq.ProtoReflect.Descriptor instead.
func (*UploadVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{12}
}

func (x *UploadVideoInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadVideoInfoReq) GetVideoInfo() *VideoMetaInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

type UploadVideoInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *CommonResp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *UploadVideoInfoResp) Reset() {
	*x = UploadVideoInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoInfoResp) ProtoMessage() {}

func (x *UploadVideoInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoInfoResp.ProtoReflect.Descriptor instead.
func (*UploadVideoInfoResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{13}
}

func (x *UploadVideoInfoResp) GetResp() *CommonResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type UploadVideoFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *UploadVideoFileReq) Reset() {
	*x = UploadVideoFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoFileReq) ProtoMessage() {}

func (x *UploadVideoFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoFileReq.ProtoReflect.Descriptor instead.
func (*UploadVideoFileReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{14}
}

func (x *UploadVideoFileReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadVideoFileReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type UploadVideoFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *CommonResp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *UploadVideoFileResp) Reset() {
	*x = UploadVideoFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoFileResp) ProtoMessage() {}

func (x *UploadVideoFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoFileResp.ProtoReflect.Descriptor instead.
func (*UploadVideoFileResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{15}
}

func (x *UploadVideoFileResp) GetResp() *CommonResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type UploadVideoCoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64 `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *UploadVideoCoverReq) Reset() {
	*x = UploadVideoCoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoCoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoCoverReq) ProtoMessage() {}

func (x *UploadVideoCoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoCoverReq.ProtoReflect.Descriptor instead.
func (*UploadVideoCoverReq) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{16}
}

func (x *UploadVideoCoverReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadVideoCoverReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type UploadVideoCoverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resp *CommonResp `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
}

func (x *UploadVideoCoverResp) Reset() {
	*x = UploadVideoCoverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoCoverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoCoverResp) ProtoMessage() {}

func (x *UploadVideoCoverResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoCoverResp.ProtoReflect.Descriptor instead.
func (*UploadVideoCoverResp) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{17}
}

func (x *UploadVideoCoverResp) GetResp() *CommonResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

type FileResp_HeaderValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *FileResp_HeaderValues) Reset() {
	*x = FileResp_HeaderValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResp_HeaderValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResp_HeaderValues) ProtoMessage() {}

func (x *FileResp_HeaderValues) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResp_HeaderValues.ProtoReflect.Descriptor instead.
func (*FileResp_HeaderValues) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FileResp_HeaderValues) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type VideoMetaInfo_Records struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CntBarrages  uint32 `protobuf:"varint,1,opt,name=cnt_barrages,json=cntBarrages,proto3" json:"cnt_barrages,omitempty"`
	CntShares    uint32 `protobuf:"varint,2,opt,name=cnt_shares,json=cntShares,proto3" json:"cnt_shares,omitempty"`
	CntViewed    uint32 `protobuf:"varint,3,opt,name=cnt_viewed,json=cntViewed,proto3" json:"cnt_viewed,omitempty"`
	CntFavorites uint32 `protobuf:"varint,4,opt,name=cnt_favorites,json=cntFavorites,proto3" json:"cnt_favorites,omitempty"`
}

func (x *VideoMetaInfo_Records) Reset() {
	*x = VideoMetaInfo_Records{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetaInfo_Records) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetaInfo_Records) ProtoMessage() {}

func (x *VideoMetaInfo_Records) ProtoReflect() protoreflect.Message {
	mi := &file_v1_video_videoinfo_videoinfo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetaInfo_Records.ProtoReflect.Descriptor instead.
func (*VideoMetaInfo_Records) Descriptor() ([]byte, []int) {
	return file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP(), []int{6, 0}
}

func (x *VideoMetaInfo_Records) GetCntBarrages() uint32 {
	if x != nil {
		return x.CntBarrages
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntShares() uint32 {
	if x != nil {
		return x.CntShares
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntViewed() uint32 {
	if x != nil {
		return x.CntViewed
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntFavorites() uint32 {
	if x != nil {
		return x.CntFavorites
	}
	return 0
}

var File_v1_video_videoinfo_videoinfo_proto protoreflect.FileDescriptor

var file_v1_video_videoinfo_videoinfo_proto_rawDesc = []byte{
	0x0a, 0x22, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xad, 0x02, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x1a, 0x24, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x71, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x4d, 0x70, 0x64, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x46,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0xe8,
	0x04, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12, 0x3d, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6e, 0x74, 0x42, 0x61,
	0x72, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6e, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6e, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6e, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x72,
	0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6e, 0x74,
	0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6e,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22,
	0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x64, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x50, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x7b, 0x0a, 0x12, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22, 0x48,
	0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3e, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x22,
	0x49, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x14, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3e, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65,
	0x73, 0x70, 0x32, 0xbc, 0x0b, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x91, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x70, 0x64, 0x12, 0x2d, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x4d, 0x70, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x6d, 0x70, 0x64, 0x12, 0xa0, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x9c, 0x01, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x30, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x33,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0xae, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x32, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x32, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0xb2, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x98, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x8d, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2f, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0x2d, 0x5a, 0x2b, 0x76, 0x77, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_video_videoinfo_videoinfo_proto_rawDescOnce sync.Once
	file_v1_video_videoinfo_videoinfo_proto_rawDescData = file_v1_video_videoinfo_videoinfo_proto_rawDesc
)

func file_v1_video_videoinfo_videoinfo_proto_rawDescGZIP() []byte {
	file_v1_video_videoinfo_videoinfo_proto_rawDescOnce.Do(func() {
		file_v1_video_videoinfo_videoinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_video_videoinfo_videoinfo_proto_rawDescData)
	})
	return file_v1_video_videoinfo_videoinfo_proto_rawDescData
}

var file_v1_video_videoinfo_videoinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_v1_video_videoinfo_videoinfo_proto_goTypes = []any{
	(*CommonResp)(nil),            // 0: gateway.api.v1.video.videoinfo.CommonResp
	(*FileResp)(nil),              // 1: gateway.api.v1.video.videoinfo.FileResp
	(*ProvideMpdReq)(nil),         // 2: gateway.api.v1.video.videoinfo.ProvideMpdReq
	(*ProvideSegmentsReq)(nil),    // 3: gateway.api.v1.video.videoinfo.ProvideSegmentsReq
	(*GetVideoCoverReq)(nil),      // 4: gateway.api.v1.video.videoinfo.GetVideoCoverReq
	(*DownloadVideoReq)(nil),      // 5: gateway.api.v1.video.videoinfo.DownloadVideoReq
	(*VideoMetaInfo)(nil),         // 6: gateway.api.v1.video.videoinfo.VideoMetaInfo
	(*VideoSummary)(nil),          // 7: gateway.api.v1.video.videoinfo.VideoSummary
	(*GetVideoInfoReq)(nil),       // 8: gateway.api.v1.video.videoinfo.GetVideoInfoReq
	(*GetVideoInfoResp)(nil),      // 9: gateway.api.v1.video.videoinfo.GetVideoInfoResp
	(*GetVideoListReq)(nil),       // 10: gateway.api.v1.video.videoinfo.GetVideoListReq
	(*GetVideoListResp)(nil),      // 11: gateway.api.v1.video.videoinfo.GetVideoListResp
	(*UploadVideoInfoReq)(nil),    // 12: gateway.api.v1.video.videoinfo.UploadVideoInfoReq
	(*UploadVideoInfoResp)(nil),   // 13: gateway.api.v1.video.videoinfo.UploadVideoInfoResp
	(*UploadVideoFileReq)(nil),    // 14: gateway.api.v1.video.videoinfo.UploadVideoFileReq
	(*UploadVideoFileResp)(nil),   // 15: gateway.api.v1.video.videoinfo.UploadVideoFileResp
	(*UploadVideoCoverReq)(nil),   // 16: gateway.api.v1.video.videoinfo.UploadVideoCoverReq
	(*UploadVideoCoverResp)(nil),  // 17: gateway.api.v1.video.videoinfo.UploadVideoCoverResp
	(*FileResp_HeaderValues)(nil), // 18: gateway.api.v1.video.videoinfo.FileResp.HeaderValues
	nil,                           // 19: gateway.api.v1.video.videoinfo.FileResp.HeadersEntry
	(*VideoMetaInfo_Records)(nil), // 20: gateway.api.v1.video.videoinfo.VideoMetaInfo.Records
	(*timestamppb.Timestamp)(nil), // 21: google.protobuf.Timestamp
}
var file_v1_video_videoinfo_videoinfo_proto_depIdxs = []int32{
	19, // 0: gateway.api.v1.video.videoinfo.FileResp.headers:type_name -> gateway.api.v1.video.videoinfo.FileResp.HeadersEntry
	21, // 1: gateway.api.v1.video.videoinfo.VideoMetaInfo.created_time:type_name -> google.protobuf.Timestamp
	20, // 2: gateway.api.v1.video.videoinfo.VideoMetaInfo.records:type_name -> gateway.api.v1.video.videoinfo.VideoMetaInfo.Records
	6,  // 3: gateway.api.v1.video.videoinfo.GetVideoInfoResp.video_detail:type_name -> gateway.api.v1.video.videoinfo.VideoMetaInfo
	7,  // 4: gateway.api.v1.video.videoinfo.GetVideoListResp.VideoSummary:type_name -> gateway.api.v1.video.videoinfo.VideoSummary
	6,  // 5: gateway.api.v1.video.videoinfo.UploadVideoInfoReq.video_info:type_name -> gateway.api.v1.video.videoinfo.VideoMetaInfo
	0,  // 6: gateway.api.v1.video.videoinfo.UploadVideoInfoResp.resp:type_name -> gateway.api.v1.video.videoinfo.CommonResp
	0,  // 7: gateway.api.v1.video.videoinfo.UploadVideoFileResp.resp:type_name -> gateway.api.v1.video.videoinfo.CommonResp
	0,  // 8: gateway.api.v1.video.videoinfo.UploadVideoCoverResp.resp:type_name -> gateway.api.v1.video.videoinfo.CommonResp
	18, // 9: gateway.api.v1.video.videoinfo.FileResp.HeadersEntry.value:type_name -> gateway.api.v1.video.videoinfo.FileResp.HeaderValues
	2,  // 10: gateway.api.v1.video.videoinfo.VideoInfo.GetMpd:input_type -> gateway.api.v1.video.videoinfo.ProvideMpdReq
	3,  // 11: gateway.api.v1.video.videoinfo.VideoInfo.GetSegments:input_type -> gateway.api.v1.video.videoinfo.ProvideSegmentsReq
	4,  // 12: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoCover:input_type -> gateway.api.v1.video.videoinfo.GetVideoCoverReq
	5,  // 13: gateway.api.v1.video.videoinfo.VideoInfo.DownloadVideo:input_type -> gateway.api.v1.video.videoinfo.DownloadVideoReq
	12, // 14: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoInfo:input_type -> gateway.api.v1.video.videoinfo.UploadVideoInfoReq
	14, // 15: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoFile:input_type -> gateway.api.v1.video.videoinfo.UploadVideoFileReq
	16, // 16: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoCover:input_type -> gateway.api.v1.video.videoinfo.UploadVideoCoverReq
	8,  // 17: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoInfo:input_type -> gateway.api.v1.video.videoinfo.GetVideoInfoReq
	10, // 18: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoList:input_type -> gateway.api.v1.video.videoinfo.GetVideoListReq
	1,  // 19: gateway.api.v1.video.videoinfo.VideoInfo.GetMpd:output_type -> gateway.api.v1.video.videoinfo.FileResp
	1,  // 20: gateway.api.v1.video.videoinfo.VideoInfo.GetSegments:output_type -> gateway.api.v1.video.videoinfo.FileResp
	1,  // 21: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoCover:output_type -> gateway.api.v1.video.videoinfo.FileResp
	1,  // 22: gateway.api.v1.video.videoinfo.VideoInfo.DownloadVideo:output_type -> gateway.api.v1.video.videoinfo.FileResp
	13, // 23: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoInfo:output_type -> gateway.api.v1.video.videoinfo.UploadVideoInfoResp
	15, // 24: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoFile:output_type -> gateway.api.v1.video.videoinfo.UploadVideoFileResp
	17, // 25: gateway.api.v1.video.videoinfo.VideoInfo.UploadVideoCover:output_type -> gateway.api.v1.video.videoinfo.UploadVideoCoverResp
	9,  // 26: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoInfo:output_type -> gateway.api.v1.video.videoinfo.GetVideoInfoResp
	11, // 27: gateway.api.v1.video.videoinfo.VideoInfo.GetVideoList:output_type -> gateway.api.v1.video.videoinfo.GetVideoListResp
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_v1_video_videoinfo_videoinfo_proto_init() }
func file_v1_video_videoinfo_videoinfo_proto_init() {
	if File_v1_video_videoinfo_videoinfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProvideMpdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProvideSegmentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoCoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DownloadVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VideoMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VideoSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoCoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoCoverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*FileResp_HeaderValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_video_videoinfo_videoinfo_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*VideoMetaInfo_Records); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_video_videoinfo_videoinfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_video_videoinfo_videoinfo_proto_goTypes,
		DependencyIndexes: file_v1_video_videoinfo_videoinfo_proto_depIdxs,
		MessageInfos:      file_v1_video_videoinfo_videoinfo_proto_msgTypes,
	}.Build()
	File_v1_video_videoinfo_videoinfo_proto = out.File
	file_v1_video_videoinfo_videoinfo_proto_rawDesc = nil
	file_v1_video_videoinfo_videoinfo_proto_goTypes = nil
	file_v1_video_videoinfo_videoinfo_proto_depIdxs = nil
}
