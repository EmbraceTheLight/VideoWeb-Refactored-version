syntax = "proto3";

package user.v1.id;

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

option go_package = "vw_user/api/v1/identity;idv1";

service Identity {
    // user identity
    rpc CheckUsernamePassword(CheckUsernamePasswordReq) returns (CheckUsernamePasswordResp) {}

    // user identity
    rpc CacheAccessToken(CacheAccessTokenReq) returns (google.protobuf.Empty) {}

    // user identity
    rpc AddExpForLogin(AddExpForLoginReq) returns (google.protobuf.Empty) {}

    rpc Register(RegisterReq) returns (RegisterResp) {}

    rpc Logout(LogoutReq) returns (google.protobuf.Empty) {}
}

message CheckUsernamePasswordReq {
    string username         = 1;
    string password         = 2;
    string correct_password = 3;
}
message CheckUsernamePasswordResp {
    string code    = 1;
    string message = 2;
}

message CacheAccessTokenReq {
    string access_token                 = 1;
    google.protobuf.Duration expiration = 2;
}

message AddExpForLoginReq {
    int64 user_id = 1;
}

message RegisterReq {
    string username       = 1;
    string password       = 2;
    string repeatPassword = 3;  //user needs repeat the password they first input.
    int32 gender          = 4;
    string email          = 5;
    string birthday       = 6;
    string signature      = 7;
    string input_code     = 8;  // The code of user's input.
    string verify_code    = 9;  // Correct verify code, which is cached in Redis. user gets this code from their email.
}
message RegisterResp {
    int32 status_code = 1;
    string msg        = 2;
    int64 userID      = 3;
    bool is_admin     = 4;
}

message LogoutReq {
    string access_token = 1;
}