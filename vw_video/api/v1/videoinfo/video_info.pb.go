// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.0
// source: v1/videoinfo/video_info.proto

package videoinfo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to File:
	//
	//	*FileResp_FileData
	//	*FileResp_Filename
	File isFileResp_File `protobuf_oneof:"file"`
}

func (x *FileResp) Reset() {
	*x = FileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResp) ProtoMessage() {}

func (x *FileResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResp.ProtoReflect.Descriptor instead.
func (*FileResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{0}
}

func (m *FileResp) GetFile() isFileResp_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (x *FileResp) GetFileData() []byte {
	if x, ok := x.GetFile().(*FileResp_FileData); ok {
		return x.FileData
	}
	return nil
}

func (x *FileResp) GetFilename() string {
	if x, ok := x.GetFile().(*FileResp_Filename); ok {
		return x.Filename
	}
	return ""
}

type isFileResp_File interface {
	isFileResp_File()
}

type FileResp_FileData struct {
	FileData []byte `protobuf:"bytes,1,opt,name=file_data,json=fileData,proto3,oneof"`
}

type FileResp_Filename struct {
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3,oneof"`
}

func (*FileResp_FileData) isFileResp_File() {}

func (*FileResp_Filename) isFileResp_File() {}

type VideoMetaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	PublisherId   int64                  `protobuf:"varint,2,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	PublisherName string                 `protobuf:"bytes,3,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	VideoPath     string                 `protobuf:"bytes,6,opt,name=video_path,json=videoPath,proto3" json:"video_path,omitempty"`
	Classes       []string               `protobuf:"bytes,7,rep,name=classes,proto3" json:"classes,omitempty"`
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Hot           int64                  `protobuf:"varint,9,opt,name=hot,proto3" json:"hot,omitempty"`
	Records       *VideoMetaInfo_Records `protobuf:"bytes,10,opt,name=records,proto3" json:"records,omitempty"`
	Duration      string                 `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty"`
	CoverPath     string                 `protobuf:"bytes,12,opt,name=cover_path,json=coverPath,proto3" json:"cover_path,omitempty"`
	Size          int64                  `protobuf:"varint,13,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *VideoMetaInfo) Reset() {
	*x = VideoMetaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetaInfo) ProtoMessage() {}

func (x *VideoMetaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetaInfo.ProtoReflect.Descriptor instead.
func (*VideoMetaInfo) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{1}
}

func (x *VideoMetaInfo) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *VideoMetaInfo) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

func (x *VideoMetaInfo) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *VideoMetaInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoMetaInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoMetaInfo) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoMetaInfo) GetClasses() []string {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *VideoMetaInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VideoMetaInfo) GetHot() int64 {
	if x != nil {
		return x.Hot
	}
	return 0
}

func (x *VideoMetaInfo) GetRecords() *VideoMetaInfo_Records {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *VideoMetaInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *VideoMetaInfo) GetCoverPath() string {
	if x != nil {
		return x.CoverPath
	}
	return ""
}

func (x *VideoMetaInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type VideoSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	CntBarrages   int64  `protobuf:"varint,2,opt,name=cnt_barrages,json=cntBarrages,proto3" json:"cnt_barrages,omitempty"`
	CntViewed     int64  `protobuf:"varint,3,opt,name=cnt_viewed,json=cntViewed,proto3" json:"cnt_viewed,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Duration      string `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	PublisherName string `protobuf:"bytes,6,opt,name=publisher_name,json=publisherName,proto3" json:"publisher_name,omitempty"`
	CoverPath     string `protobuf:"bytes,7,opt,name=cover_path,json=coverPath,proto3" json:"cover_path,omitempty"`
}

func (x *VideoSummary) Reset() {
	*x = VideoSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSummary) ProtoMessage() {}

func (x *VideoSummary) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSummary.ProtoReflect.Descriptor instead.
func (*VideoSummary) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{2}
}

func (x *VideoSummary) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *VideoSummary) GetCntBarrages() int64 {
	if x != nil {
		return x.CntBarrages
	}
	return 0
}

func (x *VideoSummary) GetCntViewed() int64 {
	if x != nil {
		return x.CntViewed
	}
	return 0
}

func (x *VideoSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoSummary) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *VideoSummary) GetPublisherName() string {
	if x != nil {
		return x.PublisherName
	}
	return ""
}

func (x *VideoSummary) GetCoverPath() string {
	if x != nil {
		return x.CoverPath
	}
	return ""
}

type GetVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetVideoInfoReq) Reset() {
	*x = GetVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoReq) ProtoMessage() {}

func (x *GetVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoReq.ProtoReflect.Descriptor instead.
func (*GetVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{3}
}

func (x *GetVideoInfoReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *GetVideoInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetVideoInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoDetail     *VideoMetaInfo                    `protobuf:"bytes,1,opt,name=video_detail,json=videoDetail,proto3" json:"video_detail,omitempty"`
	Barrages        []*GetVideoInfoResp_BarrageInfo   `protobuf:"bytes,2,rep,name=barrages,proto3" json:"barrages,omitempty"`
	UserVideoStatus *GetVideoInfoResp_UserVideoStatus `protobuf:"bytes,3,opt,name=user_video_status,json=userVideoStatus,proto3" json:"user_video_status,omitempty"`
}

func (x *GetVideoInfoResp) Reset() {
	*x = GetVideoInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResp) ProtoMessage() {}

func (x *GetVideoInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResp.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{4}
}

func (x *GetVideoInfoResp) GetVideoDetail() *VideoMetaInfo {
	if x != nil {
		return x.VideoDetail
	}
	return nil
}

func (x *GetVideoInfoResp) GetBarrages() []*GetVideoInfoResp_BarrageInfo {
	if x != nil {
		return x.Barrages
	}
	return nil
}

func (x *GetVideoInfoResp) GetUserVideoStatus() *GetVideoInfoResp_UserVideoStatus {
	if x != nil {
		return x.UserVideoStatus
	}
	return nil
}

type GetVideoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class    []string `protobuf:"bytes,1,rep,name=class,proto3" json:"class,omitempty"` // 视频所属类别
	PageNum  int32    `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetVideoListReq) Reset() {
	*x = GetVideoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListReq) ProtoMessage() {}

func (x *GetVideoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListReq.ProtoReflect.Descriptor instead.
func (*GetVideoListReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{5}
}

func (x *GetVideoListReq) GetClass() []string {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *GetVideoListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetVideoListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetVideoListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoSummary []*VideoSummary `protobuf:"bytes,1,rep,name=VideoSummary,proto3" json:"VideoSummary,omitempty"`
}

func (x *GetVideoListResp) Reset() {
	*x = GetVideoListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoListResp) ProtoMessage() {}

func (x *GetVideoListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoListResp.ProtoReflect.Descriptor instead.
func (*GetVideoListResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{6}
}

func (x *GetVideoListResp) GetVideoSummary() []*VideoSummary {
	if x != nil {
		return x.VideoSummary
	}
	return nil
}

type GetVideoFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetVideoFileReq) Reset() {
	*x = GetVideoFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoFileReq) ProtoMessage() {}

func (x *GetVideoFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoFileReq.ProtoReflect.Descriptor instead.
func (*GetVideoFileReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{7}
}

func (x *GetVideoFileReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetVideoFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoFile *FileResp `protobuf:"bytes,1,opt,name=video_file,json=videoFile,proto3" json:"video_file,omitempty"`
}

func (x *GetVideoFileResp) Reset() {
	*x = GetVideoFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoFileResp) ProtoMessage() {}

func (x *GetVideoFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoFileResp.ProtoReflect.Descriptor instead.
func (*GetVideoFileResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{8}
}

func (x *GetVideoFileResp) GetVideoFile() *FileResp {
	if x != nil {
		return x.VideoFile
	}
	return nil
}

type GetVideoMpdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetVideoMpdReq) Reset() {
	*x = GetVideoMpdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoMpdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoMpdReq) ProtoMessage() {}

func (x *GetVideoMpdReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoMpdReq.ProtoReflect.Descriptor instead.
func (*GetVideoMpdReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{9}
}

func (x *GetVideoMpdReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetVideoMpdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MpdFile *FileResp `protobuf:"bytes,1,opt,name=mpd_file,json=mpdFile,proto3" json:"mpd_file,omitempty"`
}

func (x *GetVideoMpdResp) Reset() {
	*x = GetVideoMpdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoMpdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoMpdResp) ProtoMessage() {}

func (x *GetVideoMpdResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoMpdResp.ProtoReflect.Descriptor instead.
func (*GetVideoMpdResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoMpdResp) GetMpdFile() *FileResp {
	if x != nil {
		return x.MpdFile
	}
	return nil
}

type GetVideoSegmentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoSegmentPath string `protobuf:"bytes,1,opt,name=video_segment_path,json=videoSegmentPath,proto3" json:"video_segment_path,omitempty"`
}

func (x *GetVideoSegmentReq) Reset() {
	*x = GetVideoSegmentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoSegmentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoSegmentReq) ProtoMessage() {}

func (x *GetVideoSegmentReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoSegmentReq.ProtoReflect.Descriptor instead.
func (*GetVideoSegmentReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{11}
}

func (x *GetVideoSegmentReq) GetVideoSegmentPath() string {
	if x != nil {
		return x.VideoSegmentPath
	}
	return ""
}

type GetVideoSegmentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentFile *FileResp `protobuf:"bytes,1,opt,name=segment_file,json=segmentFile,proto3" json:"segment_file,omitempty"`
}

func (x *GetVideoSegmentResp) Reset() {
	*x = GetVideoSegmentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoSegmentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoSegmentResp) ProtoMessage() {}

func (x *GetVideoSegmentResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoSegmentResp.ProtoReflect.Descriptor instead.
func (*GetVideoSegmentResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{12}
}

func (x *GetVideoSegmentResp) GetSegmentFile() *FileResp {
	if x != nil {
		return x.SegmentFile
	}
	return nil
}

type GetVideoCoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetVideoCoverReq) Reset() {
	*x = GetVideoCoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoCoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoCoverReq) ProtoMessage() {}

func (x *GetVideoCoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoCoverReq.ProtoReflect.Descriptor instead.
func (*GetVideoCoverReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{13}
}

func (x *GetVideoCoverReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetVideoCoverResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoverFile *FileResp `protobuf:"bytes,1,opt,name=cover_file,json=coverFile,proto3" json:"cover_file,omitempty"`
}

func (x *GetVideoCoverResp) Reset() {
	*x = GetVideoCoverResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoCoverResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoCoverResp) ProtoMessage() {}

func (x *GetVideoCoverResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoCoverResp.ProtoReflect.Descriptor instead.
func (*GetVideoCoverResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{14}
}

func (x *GetVideoCoverResp) GetCoverFile() *FileResp {
	if x != nil {
		return x.CoverFile
	}
	return nil
}

type UploadVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoInfo *VideoMetaInfo `protobuf:"bytes,1,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
}

func (x *UploadVideoInfoReq) Reset() {
	*x = UploadVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoInfoReq) ProtoMessage() {}

func (x *UploadVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoInfoReq.ProtoReflect.Descriptor instead.
func (*UploadVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{15}
}

func (x *UploadVideoInfoReq) GetVideoInfo() *VideoMetaInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

type UploadVideoFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to VideoFile:
	//
	//	*UploadVideoFileReq_VideoMetadata
	//	*UploadVideoFileReq_VideoFileData
	VideoFile isUploadVideoFileReq_VideoFile `protobuf_oneof:"video_file"`
}

func (x *UploadVideoFileReq) Reset() {
	*x = UploadVideoFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoFileReq) ProtoMessage() {}

func (x *UploadVideoFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoFileReq.ProtoReflect.Descriptor instead.
func (*UploadVideoFileReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{16}
}

func (m *UploadVideoFileReq) GetVideoFile() isUploadVideoFileReq_VideoFile {
	if m != nil {
		return m.VideoFile
	}
	return nil
}

func (x *UploadVideoFileReq) GetVideoMetadata() *UploadVideoFileReq_VideoFileInfo {
	if x, ok := x.GetVideoFile().(*UploadVideoFileReq_VideoMetadata); ok {
		return x.VideoMetadata
	}
	return nil
}

func (x *UploadVideoFileReq) GetVideoFileData() []byte {
	if x, ok := x.GetVideoFile().(*UploadVideoFileReq_VideoFileData); ok {
		return x.VideoFileData
	}
	return nil
}

type isUploadVideoFileReq_VideoFile interface {
	isUploadVideoFileReq_VideoFile()
}

type UploadVideoFileReq_VideoMetadata struct {
	VideoMetadata *UploadVideoFileReq_VideoFileInfo `protobuf:"bytes,1,opt,name=video_metadata,json=videoMetadata,proto3,oneof"`
}

type UploadVideoFileReq_VideoFileData struct {
	VideoFileData []byte `protobuf:"bytes,2,opt,name=video_file_data,json=videoFileData,proto3,oneof"`
}

func (*UploadVideoFileReq_VideoMetadata) isUploadVideoFileReq_VideoFile() {}

func (*UploadVideoFileReq_VideoFileData) isUploadVideoFileReq_VideoFile() {}

type UploadVideoCoverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CoverFile:
	//
	//	*UploadVideoCoverReq_CoverMetadata
	//	*UploadVideoCoverReq_CoverFileData
	CoverFile isUploadVideoCoverReq_CoverFile `protobuf_oneof:"cover_file"`
}

func (x *UploadVideoCoverReq) Reset() {
	*x = UploadVideoCoverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoCoverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoCoverReq) ProtoMessage() {}

func (x *UploadVideoCoverReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoCoverReq.ProtoReflect.Descriptor instead.
func (*UploadVideoCoverReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{17}
}

func (m *UploadVideoCoverReq) GetCoverFile() isUploadVideoCoverReq_CoverFile {
	if m != nil {
		return m.CoverFile
	}
	return nil
}

func (x *UploadVideoCoverReq) GetCoverMetadata() *UploadVideoCoverReq_CoverInfo {
	if x, ok := x.GetCoverFile().(*UploadVideoCoverReq_CoverMetadata); ok {
		return x.CoverMetadata
	}
	return nil
}

func (x *UploadVideoCoverReq) GetCoverFileData() []byte {
	if x, ok := x.GetCoverFile().(*UploadVideoCoverReq_CoverFileData); ok {
		return x.CoverFileData
	}
	return nil
}

type isUploadVideoCoverReq_CoverFile interface {
	isUploadVideoCoverReq_CoverFile()
}

type UploadVideoCoverReq_CoverMetadata struct {
	CoverMetadata *UploadVideoCoverReq_CoverInfo `protobuf:"bytes,1,opt,name=cover_metadata,json=coverMetadata,proto3,oneof"`
}

type UploadVideoCoverReq_CoverFileData struct {
	CoverFileData []byte `protobuf:"bytes,2,opt,name=cover_file_data,json=coverFileData,proto3,oneof"`
}

func (*UploadVideoCoverReq_CoverMetadata) isUploadVideoCoverReq_CoverFile() {}

func (*UploadVideoCoverReq_CoverFileData) isUploadVideoCoverReq_CoverFile() {}

type GetPublisherIdByVideoIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetPublisherIdByVideoIdReq) Reset() {
	*x = GetPublisherIdByVideoIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublisherIdByVideoIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublisherIdByVideoIdReq) ProtoMessage() {}

func (x *GetPublisherIdByVideoIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublisherIdByVideoIdReq.ProtoReflect.Descriptor instead.
func (*GetPublisherIdByVideoIdReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{18}
}

func (x *GetPublisherIdByVideoIdReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetPublisherIdByVideoIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherId int64 `protobuf:"varint,1,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
}

func (x *GetPublisherIdByVideoIdResp) Reset() {
	*x = GetPublisherIdByVideoIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublisherIdByVideoIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublisherIdByVideoIdResp) ProtoMessage() {}

func (x *GetPublisherIdByVideoIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublisherIdByVideoIdResp.ProtoReflect.Descriptor instead.
func (*GetPublisherIdByVideoIdResp) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{19}
}

func (x *GetPublisherIdByVideoIdResp) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

type AddVideoCntSharedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId        int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	IsCompensation bool  `protobuf:"varint,2,opt,name=is_compensation,json=isCompensation,proto3" json:"is_compensation,omitempty"`
}

func (x *AddVideoCntSharedReq) Reset() {
	*x = AddVideoCntSharedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVideoCntSharedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVideoCntSharedReq) ProtoMessage() {}

func (x *AddVideoCntSharedReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVideoCntSharedReq.ProtoReflect.Descriptor instead.
func (*AddVideoCntSharedReq) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{20}
}

func (x *AddVideoCntSharedReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *AddVideoCntSharedReq) GetIsCompensation() bool {
	if x != nil {
		return x.IsCompensation
	}
	return false
}

type VideoMetaInfo_Records struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CntBarrages  uint32 `protobuf:"varint,1,opt,name=cnt_barrages,json=cntBarrages,proto3" json:"cnt_barrages,omitempty"`
	CntShares    uint32 `protobuf:"varint,2,opt,name=cnt_shares,json=cntShares,proto3" json:"cnt_shares,omitempty"`
	CntViewed    uint32 `protobuf:"varint,3,opt,name=cnt_viewed,json=cntViewed,proto3" json:"cnt_viewed,omitempty"`
	CntFavorited uint32 `protobuf:"varint,4,opt,name=cnt_favorited,json=cntFavorited,proto3" json:"cnt_favorited,omitempty"`
}

func (x *VideoMetaInfo_Records) Reset() {
	*x = VideoMetaInfo_Records{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMetaInfo_Records) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetaInfo_Records) ProtoMessage() {}

func (x *VideoMetaInfo_Records) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetaInfo_Records.ProtoReflect.Descriptor instead.
func (*VideoMetaInfo_Records) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{1, 0}
}

func (x *VideoMetaInfo_Records) GetCntBarrages() uint32 {
	if x != nil {
		return x.CntBarrages
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntShares() uint32 {
	if x != nil {
		return x.CntShares
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntViewed() uint32 {
	if x != nil {
		return x.CntViewed
	}
	return 0
}

func (x *VideoMetaInfo_Records) GetCntFavorited() uint32 {
	if x != nil {
		return x.CntFavorited
	}
	return 0
}

type GetVideoInfoResp_BarrageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BarrageId int64  `protobuf:"varint,1,opt,name=barrage_id,json=barrageId,proto3" json:"barrage_id,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Time      string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"` // user sends this barrage at hh:mm:ss of the video
	Color     string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *GetVideoInfoResp_BarrageInfo) Reset() {
	*x = GetVideoInfoResp_BarrageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoResp_BarrageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResp_BarrageInfo) ProtoMessage() {}

func (x *GetVideoInfoResp_BarrageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResp_BarrageInfo.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResp_BarrageInfo) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetVideoInfoResp_BarrageInfo) GetBarrageId() int64 {
	if x != nil {
		return x.BarrageId
	}
	return 0
}

func (x *GetVideoInfoResp_BarrageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetVideoInfoResp_BarrageInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *GetVideoInfoResp_BarrageInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetVideoInfoResp_UserVideoStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUpvoted      int32 `protobuf:"varint,1,opt,name=is_upvoted,json=isUpvoted,proto3" json:"is_upvoted,omitempty"`
	IsFavorited    int32 `protobuf:"varint,2,opt,name=is_favorited,json=isFavorited,proto3" json:"is_favorited,omitempty"`
	IsShared       int32 `protobuf:"varint,3,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	IsThrownShells int32 `protobuf:"varint,4,opt,name=is_thrown_shells,json=isThrownShells,proto3" json:"is_thrown_shells,omitempty"`
}

func (x *GetVideoInfoResp_UserVideoStatus) Reset() {
	*x = GetVideoInfoResp_UserVideoStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoResp_UserVideoStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResp_UserVideoStatus) ProtoMessage() {}

func (x *GetVideoInfoResp_UserVideoStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResp_UserVideoStatus.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResp_UserVideoStatus) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{4, 1}
}

func (x *GetVideoInfoResp_UserVideoStatus) GetIsUpvoted() int32 {
	if x != nil {
		return x.IsUpvoted
	}
	return 0
}

func (x *GetVideoInfoResp_UserVideoStatus) GetIsFavorited() int32 {
	if x != nil {
		return x.IsFavorited
	}
	return 0
}

func (x *GetVideoInfoResp_UserVideoStatus) GetIsShared() int32 {
	if x != nil {
		return x.IsShared
	}
	return 0
}

func (x *GetVideoInfoResp_UserVideoStatus) GetIsThrownShells() int32 {
	if x != nil {
		return x.IsThrownShells
	}
	return 0
}

type UploadVideoFileReq_VideoFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	PublisherId   int64  `protobuf:"varint,2,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	VideoFileName string `protobuf:"bytes,3,opt,name=video_file_name,json=videoFileName,proto3" json:"video_file_name,omitempty"`
}

func (x *UploadVideoFileReq_VideoFileInfo) Reset() {
	*x = UploadVideoFileReq_VideoFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoFileReq_VideoFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoFileReq_VideoFileInfo) ProtoMessage() {}

func (x *UploadVideoFileReq_VideoFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoFileReq_VideoFileInfo.ProtoReflect.Descriptor instead.
func (*UploadVideoFileReq_VideoFileInfo) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{16, 0}
}

func (x *UploadVideoFileReq_VideoFileInfo) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *UploadVideoFileReq_VideoFileInfo) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

func (x *UploadVideoFileReq_VideoFileInfo) GetVideoFileName() string {
	if x != nil {
		return x.VideoFileName
	}
	return ""
}

type UploadVideoCoverReq_CoverInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId       int64  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	PublisherId   int64  `protobuf:"varint,2,opt,name=publisher_id,json=publisherId,proto3" json:"publisher_id,omitempty"`
	CoverFileName string `protobuf:"bytes,3,opt,name=cover_file_name,json=coverFileName,proto3" json:"cover_file_name,omitempty"`
}

func (x *UploadVideoCoverReq_CoverInfo) Reset() {
	*x = UploadVideoCoverReq_CoverInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_videoinfo_video_info_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoCoverReq_CoverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoCoverReq_CoverInfo) ProtoMessage() {}

func (x *UploadVideoCoverReq_CoverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_videoinfo_video_info_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoCoverReq_CoverInfo.ProtoReflect.Descriptor instead.
func (*UploadVideoCoverReq_CoverInfo) Descriptor() ([]byte, []int) {
	return file_v1_videoinfo_video_info_proto_rawDescGZIP(), []int{17, 0}
}

func (x *UploadVideoCoverReq_CoverInfo) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *UploadVideoCoverReq_CoverInfo) GetPublisherId() int64 {
	if x != nil {
		return x.PublisherId
	}
	return 0
}

func (x *UploadVideoCoverReq_CoverInfo) GetCoverFileName() string {
	if x != nil {
		return x.CoverFileName
	}
	return ""
}

var File_v1_videoinfo_video_info_proto protoreflect.FileDescriptor

var file_v1_videoinfo_video_info_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69,
	0x6e, 0x66, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4f, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x22, 0xb1, 0x04, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x68, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x68, 0x6f, 0x74, 0x12,
	0x43, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6e, 0x74, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6e, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6e, 0x74, 0x42, 0x61, 0x72, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x45, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x97, 0x04, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4c, 0x0a,
	0x08, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x70, 0x0a,
	0x0b, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a,
	0x9a, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x76, 0x6f, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x55, 0x70, 0x76, 0x6f, 0x74,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x77, 0x6e, 0x5f,
	0x73, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73,
	0x54, 0x68, 0x72, 0x6f, 0x77, 0x6e, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x5f, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x58, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x44, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0a, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x2b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x70, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d,
	0x70, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x70, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x6d, 0x70, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x22,
	0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x56, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x2d, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3b, 0x0a, 0x0a, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x56, 0x0a, 0x12,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x40, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa2, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x5d, 0x0a, 0x0e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x75, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x13, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x5a, 0x0a, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x2e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x71, 0x0a, 0x09, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x37, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x64, 0x22, 0x40, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x42, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x65, 0x6e, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x86, 0x09, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x70, 0x64, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x70, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x70, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x60, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a,
	0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x26, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x57, 0x0a, 0x10, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x27, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x28, 0x01, 0x12, 0x7c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x2e, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x79, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6e, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x28, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x43, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x17, 0x41, 0x64, 0x64,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x3b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_videoinfo_video_info_proto_rawDescOnce sync.Once
	file_v1_videoinfo_video_info_proto_rawDescData = file_v1_videoinfo_video_info_proto_rawDesc
)

func file_v1_videoinfo_video_info_proto_rawDescGZIP() []byte {
	file_v1_videoinfo_video_info_proto_rawDescOnce.Do(func() {
		file_v1_videoinfo_video_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_videoinfo_video_info_proto_rawDescData)
	})
	return file_v1_videoinfo_video_info_proto_rawDescData
}

var file_v1_videoinfo_video_info_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_v1_videoinfo_video_info_proto_goTypes = []any{
	(*FileResp)(nil),                         // 0: video.v1.videoinfo.FileResp
	(*VideoMetaInfo)(nil),                    // 1: video.v1.videoinfo.VideoMetaInfo
	(*VideoSummary)(nil),                     // 2: video.v1.videoinfo.VideoSummary
	(*GetVideoInfoReq)(nil),                  // 3: video.v1.videoinfo.GetVideoInfoReq
	(*GetVideoInfoResp)(nil),                 // 4: video.v1.videoinfo.GetVideoInfoResp
	(*GetVideoListReq)(nil),                  // 5: video.v1.videoinfo.GetVideoListReq
	(*GetVideoListResp)(nil),                 // 6: video.v1.videoinfo.GetVideoListResp
	(*GetVideoFileReq)(nil),                  // 7: video.v1.videoinfo.GetVideoFileReq
	(*GetVideoFileResp)(nil),                 // 8: video.v1.videoinfo.GetVideoFileResp
	(*GetVideoMpdReq)(nil),                   // 9: video.v1.videoinfo.GetVideoMpdReq
	(*GetVideoMpdResp)(nil),                  // 10: video.v1.videoinfo.GetVideoMpdResp
	(*GetVideoSegmentReq)(nil),               // 11: video.v1.videoinfo.GetVideoSegmentReq
	(*GetVideoSegmentResp)(nil),              // 12: video.v1.videoinfo.GetVideoSegmentResp
	(*GetVideoCoverReq)(nil),                 // 13: video.v1.videoinfo.GetVideoCoverReq
	(*GetVideoCoverResp)(nil),                // 14: video.v1.videoinfo.GetVideoCoverResp
	(*UploadVideoInfoReq)(nil),               // 15: video.v1.videoinfo.UploadVideoInfoReq
	(*UploadVideoFileReq)(nil),               // 16: video.v1.videoinfo.UploadVideoFileReq
	(*UploadVideoCoverReq)(nil),              // 17: video.v1.videoinfo.UploadVideoCoverReq
	(*GetPublisherIdByVideoIdReq)(nil),       // 18: video.v1.videoinfo.GetPublisherIdByVideoIdReq
	(*GetPublisherIdByVideoIdResp)(nil),      // 19: video.v1.videoinfo.GetPublisherIdByVideoIdResp
	(*AddVideoCntSharedReq)(nil),             // 20: video.v1.videoinfo.AddVideoCntSharedReq
	(*VideoMetaInfo_Records)(nil),            // 21: video.v1.videoinfo.VideoMetaInfo.Records
	(*GetVideoInfoResp_BarrageInfo)(nil),     // 22: video.v1.videoinfo.GetVideoInfoResp.BarrageInfo
	(*GetVideoInfoResp_UserVideoStatus)(nil), // 23: video.v1.videoinfo.GetVideoInfoResp.UserVideoStatus
	(*UploadVideoFileReq_VideoFileInfo)(nil), // 24: video.v1.videoinfo.UploadVideoFileReq.VideoFileInfo
	(*UploadVideoCoverReq_CoverInfo)(nil),    // 25: video.v1.videoinfo.UploadVideoCoverReq.CoverInfo
	(*emptypb.Empty)(nil),                    // 26: google.protobuf.Empty
}
var file_v1_videoinfo_video_info_proto_depIdxs = []int32{
	21, // 0: video.v1.videoinfo.VideoMetaInfo.records:type_name -> video.v1.videoinfo.VideoMetaInfo.Records
	1,  // 1: video.v1.videoinfo.GetVideoInfoResp.video_detail:type_name -> video.v1.videoinfo.VideoMetaInfo
	22, // 2: video.v1.videoinfo.GetVideoInfoResp.barrages:type_name -> video.v1.videoinfo.GetVideoInfoResp.BarrageInfo
	23, // 3: video.v1.videoinfo.GetVideoInfoResp.user_video_status:type_name -> video.v1.videoinfo.GetVideoInfoResp.UserVideoStatus
	2,  // 4: video.v1.videoinfo.GetVideoListResp.VideoSummary:type_name -> video.v1.videoinfo.VideoSummary
	0,  // 5: video.v1.videoinfo.GetVideoFileResp.video_file:type_name -> video.v1.videoinfo.FileResp
	0,  // 6: video.v1.videoinfo.GetVideoMpdResp.mpd_file:type_name -> video.v1.videoinfo.FileResp
	0,  // 7: video.v1.videoinfo.GetVideoSegmentResp.segment_file:type_name -> video.v1.videoinfo.FileResp
	0,  // 8: video.v1.videoinfo.GetVideoCoverResp.cover_file:type_name -> video.v1.videoinfo.FileResp
	1,  // 9: video.v1.videoinfo.UploadVideoInfoReq.video_info:type_name -> video.v1.videoinfo.VideoMetaInfo
	24, // 10: video.v1.videoinfo.UploadVideoFileReq.video_metadata:type_name -> video.v1.videoinfo.UploadVideoFileReq.VideoFileInfo
	25, // 11: video.v1.videoinfo.UploadVideoCoverReq.cover_metadata:type_name -> video.v1.videoinfo.UploadVideoCoverReq.CoverInfo
	3,  // 12: video.v1.videoinfo.VideoInfo.GetVideoInfo:input_type -> video.v1.videoinfo.GetVideoInfoReq
	5,  // 13: video.v1.videoinfo.VideoInfo.GetVideoList:input_type -> video.v1.videoinfo.GetVideoListReq
	7,  // 14: video.v1.videoinfo.VideoInfo.GetVideoFile:input_type -> video.v1.videoinfo.GetVideoFileReq
	9,  // 15: video.v1.videoinfo.VideoInfo.GetVideoMpd:input_type -> video.v1.videoinfo.GetVideoMpdReq
	11, // 16: video.v1.videoinfo.VideoInfo.GetVideoSegments:input_type -> video.v1.videoinfo.GetVideoSegmentReq
	13, // 17: video.v1.videoinfo.VideoInfo.GetVideoCover:input_type -> video.v1.videoinfo.GetVideoCoverReq
	15, // 18: video.v1.videoinfo.VideoInfo.UploadVideoInfo:input_type -> video.v1.videoinfo.UploadVideoInfoReq
	16, // 19: video.v1.videoinfo.VideoInfo.UploadVideoFile:input_type -> video.v1.videoinfo.UploadVideoFileReq
	17, // 20: video.v1.videoinfo.VideoInfo.UploadVideoCover:input_type -> video.v1.videoinfo.UploadVideoCoverReq
	18, // 21: video.v1.videoinfo.VideoInfo.GetPublisherIdByVideoId:input_type -> video.v1.videoinfo.GetPublisherIdByVideoIdReq
	20, // 22: video.v1.videoinfo.VideoInfo.AddVideoCntShared:input_type -> video.v1.videoinfo.AddVideoCntSharedReq
	20, // 23: video.v1.videoinfo.VideoInfo.AddVideoCntSharedRevert:input_type -> video.v1.videoinfo.AddVideoCntSharedReq
	4,  // 24: video.v1.videoinfo.VideoInfo.GetVideoInfo:output_type -> video.v1.videoinfo.GetVideoInfoResp
	6,  // 25: video.v1.videoinfo.VideoInfo.GetVideoList:output_type -> video.v1.videoinfo.GetVideoListResp
	8,  // 26: video.v1.videoinfo.VideoInfo.GetVideoFile:output_type -> video.v1.videoinfo.GetVideoFileResp
	10, // 27: video.v1.videoinfo.VideoInfo.GetVideoMpd:output_type -> video.v1.videoinfo.GetVideoMpdResp
	12, // 28: video.v1.videoinfo.VideoInfo.GetVideoSegments:output_type -> video.v1.videoinfo.GetVideoSegmentResp
	14, // 29: video.v1.videoinfo.VideoInfo.GetVideoCover:output_type -> video.v1.videoinfo.GetVideoCoverResp
	26, // 30: video.v1.videoinfo.VideoInfo.UploadVideoInfo:output_type -> google.protobuf.Empty
	26, // 31: video.v1.videoinfo.VideoInfo.UploadVideoFile:output_type -> google.protobuf.Empty
	26, // 32: video.v1.videoinfo.VideoInfo.UploadVideoCover:output_type -> google.protobuf.Empty
	19, // 33: video.v1.videoinfo.VideoInfo.GetPublisherIdByVideoId:output_type -> video.v1.videoinfo.GetPublisherIdByVideoIdResp
	26, // 34: video.v1.videoinfo.VideoInfo.AddVideoCntShared:output_type -> google.protobuf.Empty
	26, // 35: video.v1.videoinfo.VideoInfo.AddVideoCntSharedRevert:output_type -> google.protobuf.Empty
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_v1_videoinfo_video_info_proto_init() }
func file_v1_videoinfo_video_info_proto_init() {
	if File_v1_videoinfo_video_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_videoinfo_video_info_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*VideoMetaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*VideoSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoMpdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoMpdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoSegmentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoSegmentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoCoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoCoverResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoCoverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetPublisherIdByVideoIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetPublisherIdByVideoIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*AddVideoCntSharedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*VideoMetaInfo_Records); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoResp_BarrageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetVideoInfoResp_UserVideoStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoFileReq_VideoFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_videoinfo_video_info_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoCoverReq_CoverInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_videoinfo_video_info_proto_msgTypes[0].OneofWrappers = []any{
		(*FileResp_FileData)(nil),
		(*FileResp_Filename)(nil),
	}
	file_v1_videoinfo_video_info_proto_msgTypes[16].OneofWrappers = []any{
		(*UploadVideoFileReq_VideoMetadata)(nil),
		(*UploadVideoFileReq_VideoFileData)(nil),
	}
	file_v1_videoinfo_video_info_proto_msgTypes[17].OneofWrappers = []any{
		(*UploadVideoCoverReq_CoverMetadata)(nil),
		(*UploadVideoCoverReq_CoverFileData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_videoinfo_video_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_videoinfo_video_info_proto_goTypes,
		DependencyIndexes: file_v1_videoinfo_video_info_proto_depIdxs,
		MessageInfos:      file_v1_videoinfo_video_info_proto_msgTypes,
	}.Build()
	File_v1_videoinfo_video_info_proto = out.File
	file_v1_videoinfo_video_info_proto_rawDesc = nil
	file_v1_videoinfo_video_info_proto_goTypes = nil
	file_v1_videoinfo_video_info_proto_depIdxs = nil
}
